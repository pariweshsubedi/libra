// Copyright (c) XXV Inc. dba Synthetic Minds
// SPDX-License-Identifier: Apache-2.0

import 0x0.LibraCoin;
import 0x0.LibraAccount;
import 0x0.RockPaperScissors;
import 0x0.Sym;
import 0x0.Verify;
import 0x0.TimeService;

main() {
    let a1: address;
    let a2: address;
    let bet1: LibraCoin.T;
    let bet1_value: u64;
    let balance1: u64;
    let balance1_sym: u64;
    let hand1: u64;
    let hand1_bytes: bytearray;
    let secret: bytearray;
    let sender: address;
    let time: u64;
    let challenge_time: u64;

    a1 = Sym.fresh_address("player1", 0x00000000000000000000000000000001);
    a2 = Sym.fresh_address("player2", 0x00000000000000000000000000000002);
    sender = get_txn_sender();
    assert(copy(sender) == copy(a1), 99);

    bet1_value = Sym.fresh_u64("player1_bet", 10);
    hand1 = Sym.fresh_u64("player1_hand", 0);
    assert(copy(hand1) <= 2, 99);
    secret = Sym.fresh_bytearray("player1_secret", "supersecret");

    balance1 = LibraAccount.balance(copy(a1));

    balance1_sym = Sym.fresh_u64("player1_init_balance", 5);
    assert(copy(balance1_sym) == copy(balance1), 99);

    bet1 = LibraAccount.withdraw_from_sender(copy(bet1_value));

    time = TimeService.current_time();
    challenge_time = Sym.fresh_u64("challenge_time", 0);
    assert(copy(time) == copy(challenge_time), 99);

    hand1_bytes = RockPaperScissors.hash_hand(copy(secret), copy(hand1));
    RockPaperScissors.player1_bet(copy(a2), move(bet1), copy(hand1_bytes));

    return;
}
